{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\3.MubarakHossainCodeGhuru\\\\react\\\\challange-yourself\\\\src\\\\components\\\\StatChart\\\\StatChart.js\";\nimport \"./styles.css\";\nimport React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: \"Group A\",\n  value: 400\n}, {\n  name: \"Group B\",\n  value: 300\n}, {\n  name: \"Group C\",\n  value: 300\n}, {\n  name: \"Group D\",\n  value: 200\n}];\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = _ref => {\n  let {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index\n  } = _ref;\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return /*#__PURE__*/_jsxDEV(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? \"start\" : \"end\",\n    dominantBaseline: \"central\",\n    children: `${(percent * 100).toFixed(0)}%`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(PieChart, {\n    width: 400,\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: data,\n      cx: 200,\n      cy: 200,\n      labelLine: false,\n      label: renderCustomizedLabel,\n      outerRadius: 80,\n      fill: \"#8884d8\",\n      dataKey: \"value\",\n      children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n        fill: COLORS[index % COLORS.length]\n      }, `cell-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useState","PieChart","Pie","Cell","data","name","value","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","App","map","entry","length"],"sources":["C:/projects/3.MubarakHossainCodeGhuru/react/challange-yourself/src/components/StatChart/StatChart.js"],"sourcesContent":["import \"./styles.css\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { PieChart, Pie, Cell } from \"recharts\";\r\n\r\nconst data = [\r\n    { name: \"Group A\", value: 400 },\r\n    { name: \"Group B\", value: 300 },\r\n    { name: \"Group C\", value: 300 },\r\n    { name: \"Group D\", value: 200 }\r\n];\r\n\r\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    percent,\r\n    index\r\n}: any) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n        <text\r\n            x={x}\r\n            y={y}\r\n            fill=\"white\"\r\n            textAnchor={x > cx ? \"start\" : \"end\"}\r\n            dominantBaseline=\"central\"\r\n        >\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n    );\r\n};\r\nexport default function App() {\r\n    return (\r\n        <PieChart width={400} height={400}>\r\n            <Pie\r\n                data={data}\r\n                cx={200}\r\n                cy={200}\r\n                labelLine={false}\r\n                label={renderCustomizedLabel}\r\n                outerRadius={80}\r\n                fill=\"#8884d8\"\r\n                dataKey=\"value\"\r\n            >\r\n                {data.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                ))}\r\n            </Pie>\r\n        </PieChart>\r\n    );\r\n}\r\n"],"mappings":";AAAA,OAAO,cAAc;AACrB,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,QAAQ,UAAU;AAAC;AAE/C,MAAMC,IAAI,GAAG,CACT;EAAEC,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC/B;EAAED,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC/B;EAAED,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC/B;EAAED,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAI,CAAC,CAClC;AAED,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAE3D,MAAMC,MAAM,GAAGC,IAAI,CAACC,EAAE,GAAG,GAAG;AAC5B,MAAMC,qBAAqB,GAAG,QAQnB;EAAA,IARoB;IAC3BC,EAAE;IACFC,EAAE;IACFC,QAAQ;IACRC,WAAW;IACXC,WAAW;IACXC,OAAO;IACPC;EACC,CAAC;EACF,MAAMC,MAAM,GAAGJ,WAAW,GAAG,CAACC,WAAW,GAAGD,WAAW,IAAI,GAAG;EAC9D,MAAMK,CAAC,GAAGR,EAAE,GAAGO,MAAM,GAAGV,IAAI,CAACY,GAAG,CAAC,CAACP,QAAQ,GAAGN,MAAM,CAAC;EACpD,MAAMc,CAAC,GAAGT,EAAE,GAAGM,MAAM,GAAGV,IAAI,CAACc,GAAG,CAAC,CAACT,QAAQ,GAAGN,MAAM,CAAC;EAEpD,oBACI;IACI,CAAC,EAAEY,CAAE;IACL,CAAC,EAAEE,CAAE;IACL,IAAI,EAAC,OAAO;IACZ,UAAU,EAAEF,CAAC,GAAGR,EAAE,GAAG,OAAO,GAAG,KAAM;IACrC,gBAAgB,EAAC,SAAS;IAAA,UAExB,GAAE,CAACK,OAAO,GAAG,GAAG,EAAEO,OAAO,CAAC,CAAC,CAAE;EAAE;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEf,CAAC;AACD,eAAe,SAASC,GAAG,GAAG;EAC1B,oBACI,QAAC,QAAQ;IAAC,KAAK,EAAE,GAAI;IAAC,MAAM,EAAE,GAAI;IAAA,uBAC9B,QAAC,GAAG;MACA,IAAI,EAAErB,IAAK;MACX,EAAE,EAAE,GAAI;MACR,EAAE,EAAE,GAAI;MACR,SAAS,EAAE,KAAM;MACjB,KAAK,EAAEO,qBAAsB;MAC7B,WAAW,EAAE,EAAG;MAChB,IAAI,EAAC,SAAS;MACd,OAAO,EAAC,OAAO;MAAA,UAEdP,IAAI,CAACsB,GAAG,CAAC,CAACC,KAAK,EAAET,KAAK,kBACnB,QAAC,IAAI;QAAuB,IAAI,EAAEX,MAAM,CAACW,KAAK,GAAGX,MAAM,CAACqB,MAAM;MAAE,GAApD,QAAOV,KAAM,EAAC;QAAA;QAAA;QAAA;MAAA,QAC7B;IAAC;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACC;AAEnB;AAAC,KAnBuBO,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}