{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\3.MubarakHossainCodeGhuru\\\\react\\\\challange-yourself\\\\src\\\\components\\\\Rechart\\\\Rechart.js\";\nimport React from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, Tooltip, XAxis, YAxis } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Rechart = _ref => {\n  let {\n    tq\n  } = _ref;\n  const {\n    id,\n    name,\n    total\n  } = tq;\n  console.log(tq);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 730,\n      height: 250,\n      tq: tq,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"4 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"pv\",\n        fill: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"uv\",\n        fill: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = Rechart;\nexport default Rechart;\nvar _c;\n$RefreshReg$(_c, \"Rechart\");","map":{"version":3,"names":["React","Bar","BarChart","CartesianGrid","Legend","Tooltip","XAxis","YAxis","Rechart","tq","id","name","total","console","log"],"sources":["C:/projects/3.MubarakHossainCodeGhuru/react/challange-yourself/src/components/Rechart/Rechart.js"],"sourcesContent":["import React from 'react';\r\nimport { Bar, BarChart, CartesianGrid, Legend, Tooltip, XAxis, YAxis } from 'recharts';\r\nconst Rechart = ({ tq }) => {\r\n    const { id, name, total } = tq;\r\n    console.log(tq);\r\n\r\n    return (\r\n        <div>\r\n            <BarChart width={730} height={250} tq={tq}>\r\n                <CartesianGrid strokeDasharray=\"4 4\" />\r\n                <XAxis dataKey={name} />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"pv\" fill=\"blue\" />\r\n                <Bar dataKey=\"uv\" fill=\"orange\" />\r\n            </BarChart>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rechart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,QAAQ,UAAU;AAAC;AACvF,MAAMC,OAAO,GAAG,QAAY;EAAA,IAAX;IAAEC;EAAG,CAAC;EACnB,MAAM;IAAEC,EAAE;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGH,EAAE;EAC9BI,OAAO,CAACC,GAAG,CAACL,EAAE,CAAC;EAEf,oBACI;IAAA,uBACI,QAAC,QAAQ;MAAC,KAAK,EAAE,GAAI;MAAC,MAAM,EAAE,GAAI;MAAC,EAAE,EAAEA,EAAG;MAAA,wBACtC,QAAC,aAAa;QAAC,eAAe,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eACvC,QAAC,KAAK;QAAC,OAAO,EAAEE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eACxB,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eACT,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eACX,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,GAAG;QAAC,OAAO,EAAC,IAAI;QAAC,IAAI,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAChC,QAAC,GAAG;QAAC,OAAO,EAAC,IAAI;QAAC,IAAI,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAC3B;IAAA;IAAA;IAAA;EAAA,QACT;AAEd,CAAC;AAAC,KAjBIH,OAAO;AAmBb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}